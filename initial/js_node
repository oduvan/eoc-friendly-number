export function friendlyNumber(num, options) {

    // your code here
    return undefined;
}

import * as assert from 'assert';
console.log('Example:');
console.log(friendlyNumber(102, {}));

// These "asserts" are used for self-checking
assert.equal(friendlyNumber(102, {}), '102');
assert.equal(friendlyNumber(12341234, {'decimals': 1}), '12.3M');
assert.equal(friendlyNumber(12000000, {'decimals': 3}), '12.000M');
assert.equal(friendlyNumber(102, {'decimals': 2}), '102.00');
assert.equal(friendlyNumber(10240, {}), '10k');
assert.equal(friendlyNumber(1024000000,
 {'base': 1024, 'suffix': 'iB'}), '976MiB');
assert.equal(friendlyNumber(-150,
 {'base': 100,
  'powers': ['', 'd', 'D']}), '-1d');
assert.equal(friendlyNumber(-155,
 {'base': 100,
  'decimals': 1,
  'powers': ['', 'd', 'D']}), '-1.6d');
assert.equal(friendlyNumber(255000000000,
 {'powers': ['', 'k', 'M']}), '255000M');

console.log("Coding complete? Click 'Check' to earn cool rewards!");
    
